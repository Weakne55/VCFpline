#!/bin/bash
unset DISPLAY
file=$1
echo $file
snfile="${file%%.*}"
echo $snfile
$(touch total.txt)
echo "ID sample" $snfile > total.txt
total=$(zcat $file | echo $((`wc -l`/4))) 
echo "total reads" $total >> total.txt
mkdir "FASTQC_PRE"
$(fastqc -q -o FASTQC_PRE $file)
echo "FASTQC DONE"
$(AdapterRemoval --file1 $file --basename $snfile --minadapteroverlap 5 --trimns --minlength 30)
echo "ADAPTER REMOVAL DONE"
#cp $snfile.collapsed temp.collapsed
file=$snfile.truncated
mkdir "adapterremoval"; mv *".settings" *".discarded" "adapterremoval"
mkdir "FASTQC_POST"	
$(fastqc -q -o FASTQC_POST $file)
echo "FASTQC DONE"
$(bwa mem -k19 -r2.5 -t64 ../ncbi_dataset/data/GCF_000001405.26/GCF_000001405.26_GRCh38_genomic.fna $file | samtools sort -o $snfile"_mapped_sorted.bam")
	#$(bwa aln ../../ncbi_dataset/data/GCF_000001405.26/GCF_000001405.26_GRCh38_genomic.fna $file -t128 -l16500 -n0.01 > final.sai)
	#echo "BWA ALIGN DONE"
	#$(bwa samse ../../ncbi_dataset/data/GCF_000001405.26/GCF_000001405.26_GRCh38_genomic.fna final.sai $file | samtools sort -O bam > aln_mapped_sorted.bam)
echo "MAPPING AND SORTING DONE"
rm $snfile".collapsed"
$(samtools view -h -b -q 30 $snfile"_mapped_sorted.bam" -o $snfile".mapQ30.bam")
$(picard MarkDuplicates INPUT=$snfile".mapQ30.bam" OUTPUT=$snfile"_mapped_sorted_rmdup.bam" METRICS_FILE=rmdup.metr    ics.txt REMOVE_DUPLICATES=TRUE AS=TRUE VALIDATION_STRINGENCY=SILENT)
echo "DUPLICATES REMOVING DONE"
mapped=$(samtools stats $snfile"_mapped_sorted_rmdup.bam" |grep ^SN | cut -f 2- | grep "^reads mapped:" | awk '{print $3}')
echo "mapped reads" $mapped>> total.txt
percentage=$(bc<<<"scale=3;$mapped/$total*100")
echo "% mapped" $percentage"%" >> total.txt
	
	#size=$(samtools view -H  $snfile"_mapped_sorted_rmdup.bam" | grep -P '^@SQ' | cut -f 3 -d ':' | awk '{sum+=$1} END {print sum}')
depth_tmp=$(samtools depth $snfile"_mapped_sorted_rmdup.bam" |  awk '{sum+=$3} END { print sum}')
depth=$(bc<<<"scale=3;$depth_tmp/3099734149")
echo "Depth" $depth"X" >> total.txt

coverage=$(bedtools bamtobed -i $snfile"_mapped_sorted_rmdup.bam" | awk '{sum+=$3-$2} END {print sum/3099734149*100}')
echo "Coverage" $coverage"%" >> total.txt
	

	
$(qualimap bamqc -bam $snfile"_mapped_sorted_rmdup.bam" --java-mem-size=4G -gd HUMAN -nt 32 -outdir qualimap)
echo "QUALIMAP DONE"
$(samtools index $snfile"_mapped_sorted_rmdup.bam")
$(samtools mpileup --positions ../hapCon/reference/chrX_1000G_NC.bed -r NC_000023.11 -q 30 -Q 30 -o $snfile"_mapped_sorted_rmdup.mpileup" $snfile"_mapped_sorted_rmdup.bam")
$(hapConX -m $snfile"_mapped_sorted_rmdup.mpileup" -r ../hapCon/reference/chrX_1000G.hdf5 --meta ../hapCon/reference/meta_df_all.csv)
echo "CONTAMINATION ESTIMATING DONE"
$(mapDamage -i $snfile"_mapped_sorted_rmdup.bam" -r ../ncbi_dataset/data/GCF_000001405.26/GCF_000001405.26_GRCh38_genomic.fna --diff-hangs --no-stats --folder=mapDamage)
echo "DAMAGE ESTIMATING DONE"
$(bcftools mpileup -Ov -h100 --skip-indels -o30 --annotate FORMAT/AD,FORMAT/ADF,FORMAT/ADR,FORMAT/DP,FORMAT/SP,INFO/AD,INFO/ADF,INFO/ADR -f ../ncbi_dataset/data/GCF_000001405.26/GCF_000001405.26_GRCh38_genomic.fna $snfile"_mapped_sorted_rmdup.bam" -o bcfmpileup.vcf)
echo "LIKELIHOODS ESTIMATING DONE"
$(bcftools view --include 'FMT/DP>=1' -o bcfview.bcf bcfmpileup.vcf)
$(bcftools call -m -v -Ov -o bcfcall.vcf bcfview.bcf)
echo "VCF CALLING DONE"
awk '/^#/' bcfcall.vcf > chrY.vcf
awk '/^#/' bcfcall.vcf > mito.vcf
awk '/^NC_012920.1/' bcfcall.vcf >> mito.vcf
awk '/^NC_000024.10/' bcfcall.vcf >> chrY.vcf

	#echo "Total variants" grep -v '^#' bcfmpileup.vcf | wc -l >> total.txt
var=$(grep -v '^#' bcfcall.vcf | wc -l)
echo "Filtered variants" $var >> total.txt
python3 ../y_chr_snp.py $snfile"_mapped_sorted_rmdup.bam"
	#awk '{$1=""}1' temp.csv > YSNP.csv
	#rm temp.csv
echo "HAPLOGROUP DETECTION DONE"

	#mv $snfile".collapsed adapterremoval/"
mkdir vcf_calling; mv bcfcall.vcf bcfmpileup.vcf bcfview.bcf YSNP.xlsx chrY.vcf mito.vcf vcf_calling/
mkdir contamination; mv $snfile"_mapped_sorted_rmdup.hapCon.txt" $snfile"_mapped_sorted_rmdup.hdf5" $snfile"_mapped_sorted_rmdup.mpileup" contamination/
mkdir mapping_data; mv $snfile"_mapped_sorted_rmdup.bam.bai" rmdup.metrics.txt $snfile"_mapped_sorted.bam" $snfile"_mapped_sorted_rmdup.bam" mapping_data/
$(multiqc .)


