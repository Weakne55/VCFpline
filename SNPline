#!/bin/bash

divdir()
{
for file in $1*
do 
	path="${file%%_L*}"
	mkdir -p $path
	result="${path#*/}"
	filename_R1="$1${result}_L001_R1_001.fastq.gz"
	filename_R2="$1${result}_L001_R2_001.fastq.gz"
	mv $filename_R1 $filename_R2 $path 
done
}

processing()
{
# тут вопрос Надо ли обрезать последний нуклеотид? Довольно тяжело привязать bbmap к пайплайну
#
#array=($(ls $dr))
#echo $dr
#echo "Array" ${array[*]}
#n=$(seqkit stats $dr/${array[0]} | awk '{print $NF}' | awk 'FNR == 2 {print}')
#remainder=$(( n % 5 ))
#file1=${dr}/${array[0]}
#file2=${dr}/${array[1]}
#if [ $remainder -eq 1 ]
#then 
#	
#	$(bash ~/HistoricalGenetics/bbmap/bbduk.sh in1=${file1} in2=${file2} out1=trimmed_file1.fastq out2=trimmed_file2.fastq ftm=5)
#
	cd $1
	array=($(ls))
	file1=${array[0]}
	file2=${array[1]}
	mkdir "FASTQC_PRE"
	$(fastqc -q -o FASTQC_PRE $file1 $file2)
	echo "FASTQC DONE"
	$(AdapterRemoval --file1 $file1 --file2 $file2 --basename noadapter --collapse --preserve5p --minadapteroverlap 1)
	echo "ADAPTER REMOVAL DONE"
	cp noadapter.collapsed temp.collapsed
	file="temp.collapsed"
	echo $1
	mkdir "adapterremoval"; mv "noadapter"* "adapterremoval"
	mkdir "FASTQC_POST"	
	$(fastqc -q -o FASTQC_POST $file)
	echo "FASTQC DONE"
	$(bwa aln ../../GRCh38/GRCh38_latest_genomic.fna $file -l16500 -n0.01 > final.sai)
	echo "BWA ALIGN DONE"
	$(bwa samse ../../GRCh38/GRCh38_latest_genomic.fna final.sai $file | samtools sort -O bam > aln_mapped_sorted.bam)
	echo "SAMTOOLS SORTING DONE"
	rm temp.collapsed final.sai
	$(picard MarkDuplicates INPUT=aln_mapped_sorted.bam OUTPUT=aln_mapped_sorted_rmdup.bam METRICS_FILE=aln_metrics.txt REMOVE_DUPLICATES=TRUE AS=TRUE VALIDATION_STRINGENCY=SILENT)
	echo "DUPLICATES REMOVING DONE"
	$(mapDamage -i aln_mapped_sorted_rmdup.bam -r ../../GRCh38/GRCh38_latest_genomic.fna --diff-hangs --no-stats)
	echo "DAMAGE ESTIMATING DONE"
	$(bcftools mpileup -Ou -h100 --skip-indels -o30 --annotate FORMAT/AD,FORMAT/ADF,FORMAT/ADR,FORMAT/DP,FORMAT/SP,INFO/AD,INFO/ADF,INFO/ADR -f ../../GRCh38/GRCh38_latest_genomic.fna aln_mapped_sorted_rmdup.bam -o bcfmpileup.bcf)
	echo "LIKELIHOODS ESTIMATING DONE"
	$(bcftools view --include 'FMT/DP>=1' -o bcfview.bcf bcfmpileup.bcf)
	$(bcftools call -m -v -Ov -o bcfcall.vcf bcfview.bcf)
	echo "VCF CALLING DONE"
	cd ../..


}



if [ "$#" -eq 1 ]; then
	divdir $1
	for dir in $1*
	do
		processing $dir 
	done
elif [ "$#" -eq 2 ] && [ "$1" = "-o" ]; then
	processing $2 
else
	echo "Usage: $0 dirname [-o file1 file2]"
	exit 1
fi


